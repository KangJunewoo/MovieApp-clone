{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTAoCeA,MA/Bf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAChD,OAEE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,gBACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,uBAAGK,UAAU,kBAAkBH,GAC/B,wBAAIG,UAAU,UACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAEV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,UCsCAG,G,kNAlDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAEmCC,IAAMC,IAAI,yDAF7C,gBAEcJ,EAFd,EAEFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAHzB,2C,kEAYVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASV,UAAU,aAChBS,EACC,yBAAKT,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGA,yBAAKA,UAAU,UACZU,EAAOP,KAAI,SAAAe,GAAK,OACf,kBAAC,EAAD,CACEZ,IAAKY,EAAMxB,GACXA,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZG,OAAQoB,EAAMC,mBACdvB,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfE,OAAQmB,EAAMnB,kB,GAxCdqB,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8d428d8a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\n// state가 필요없는 경우 굳이 클래스형이 아니어도 됨. 함수형도 무방.\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n  return(\r\n    // jsx에선 class 대신 className을 쓴다.\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title}/>\r\n      <div className=\"movie_>_data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <p className=\"movie__summary\">{summary}</p>\r\n        <ul className=\"genres\">\r\n          {genres.map((genre, index) =>\r\n            // map함수에도 key추가 필요함.\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n            )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nMovie.propTypes={\r\n  id:PropTypes.number.isRequired,\r\n  year:PropTypes.number.isRequired,\r\n  title:PropTypes.string.isRequired,\r\n  summary:PropTypes.string.isRequired,\r\n  poster:PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // 데이터 받는법 : fetch vs axios : 이번엔 axios를 쓰지만 fetch도 알아놓자.\n  getMovies = async () => {\n    // 순수 데이터는 movies.data.data.movies에 있음. es6문법 총집합이네..\n    const { data: { data: { movies } } } = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=rating');\n    this.setState({ movies, isLoading: false });\n    // this.setState({movies : movies})\n  }\n\n  // async componentDidMount(){\n  //   const movies = await axios.get('https://yts.mx/api/v2/list_movies.json');\n  // };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return(\n      <section className='container'>\n        {isLoading ?(\n          <div className='loader'>\n            <span className='loader__text'>Loading...</span>\n          </div>\n          ): (\n            <div className=\"movies\">\n              {movies.map(movie=>(\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  poster={movie.medium_cover_image}\n                  title={movie.title}\n                  summary={movie.summary}\n                  genres={movie.genres}\n                />\n              ))}\n            </div>\n          )}\n    \n      </section>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// 저 app은 컴포넌트이다.\n// js와 html의 조합 : jsx -> 인접하게 하면 안됨.\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}